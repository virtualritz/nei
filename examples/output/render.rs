fn nsi_camera<'a>(
    c: &nsi::Context<'a>,
    name: &str,
    open: nsi::output::OpenCallback,
    write: nsi::output::WriteCallback,
    finish: nsi::output::FinishCallback,
) {
    // Setup a camera transform.
    c.create("camera_xform", nsi::NodeType::Transform, None);
    c.connect("camera_xform", "", ".root", "objects", None);
    c.set_attribute(
        "camera_xform",
        &[nsi::double_matrix!(
            "transformationmatrix",
            &[1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 5., 1.,]
        )],
    );

    // Setup a camera.
    c.create("camera", nsi::NodeType::PerspectiveCamera, None);
    c.connect("camera", "", "camera_xform", "objects", None);
    c.set_attribute("camera", &[nsi::float!("fov", 35.)]);

    // Setup a screen.
    c.create("screen", nsi::NodeType::Screen, None);
    c.connect("screen", "", "camera", "screens", None);
    c.set_attribute(
        "screen",
        &[
            nsi::integers!("resolution", &[128, 128]).array_len(2),
            nsi::integer!("oversampling", 32),
        ],
    );

    // RGB layer.
    c.create("beauty", nsi::NodeType::OutputLayer, None);
    c.set_attribute(
        "beauty",
        &[
            nsi::string!("variablename", "Ci"),
            nsi::integer!("withalpha", 1),
            nsi::string!("scalarformat", "float"),
        ],
    );
    c.connect("beauty", "", "screen", "outputlayers", None);

    // Setup an output driver.
    c.create("driver", nsi::NodeType::OutputDriver, None);
    c.connect("driver", "", "beauty", "outputdrivers", None);

    c.set_attribute(
        "driver",
        &[
            nsi::string!("drivername", nsi::output::FERRIS),
            nsi::string!("imagefilename", name),
            nsi::integer!("associatealpha", 1),
            nsi::callback!("callback.open", open),
            nsi::callback!("callback.write", write),
            nsi::callback!("callback.finish", finish),
        ],
    );

    // We add another output driver, exr, that is built into 3Delight.
    c.create("driver2", nsi::NodeType::OutputDriver, None);
    c.connect("driver2", "", "beauty", "outputdrivers", None);

    c.set_attribute(
        "driver2",
        &[
            nsi::string!("drivername", "exr"),
            nsi::string!("imagefilename", "output.exr"),
        ],
    );
}

fn nsi_material(c: &nsi::Context, name: &str) {
    // Attributes.
    let attribute_name = format!("{}_attrib", name);
    c.create(attribute_name.clone(), nsi::NodeType::Attributes, None);
    c.connect(attribute_name.clone(), "", name, "geometryattributes", None);

    // Metal shader.
    let shader_name = format!("{}_shader", name);
    c.create(shader_name.clone(), nsi::NodeType::Shader, None);
    c.connect(
        shader_name.clone(),
        "",
        attribute_name,
        "surfaceshader",
        None,
    );

    c.set_attribute(
        shader_name,
        &[
            nsi::string!("shaderfilename", "${DELIGHT}/osl/dlPrincipled"),
            nsi::color!("i_color", &[1., 0.6, 0.3]),
            //nsi::arg!("coating_thickness", 0.1),
            nsi::float!("roughness", 0.01),
            nsi::float!("specular_level", 1.0),
            nsi::float!("metallic", 1.),
            nsi::float!("anisotropy", 0.),
            nsi::float!("sss_weight", 0.),
            nsi::color!("sss_color", &[0.5, 0.5, 0.5]),
            nsi::float!("sss_scale", 0.),
            nsi::color!("incandescence", &[0., 0., 0.]),
            nsi::float!("incandescence_intensity", 0.),
        ],
    );
}

fn nsi_environment(c: &nsi::Context) {
    // Set up an environment light.
    c.create("env_xform", nsi::NodeType::Transform, None);
    c.connect("env_xform", "", ".root", "objects", None);

    c.create("environment", nsi::NodeType::Environment, None);
    c.connect("environment", "", "env_xform", "objects", None);

    c.create("env_attrib", nsi::NodeType::Attributes, None);
    c.connect("env_attrib", "", "environment", "geometryattributes", None);

    c.set_attribute("env_attrib", &[nsi::integer!("visibility.camera", 0)]);

    c.create("env_shader", nsi::NodeType::Shader, None);
    c.connect("env_shader", "", "env_attrib", "surfaceshader", None);

    // Environment light attributes.
    c.set_attribute(
        "env_shader",
        &[
            nsi::string!("shaderfilename", "${DELIGHT}/osl/environmentLight"),
            nsi::float!("intensity", 1.),
        ],
    );

    c.set_attribute(
        "env_shader",
        &[nsi::string!("image", "assets/wooden_lounge_1k.tdl")],
    );
}

pub(crate) fn nsi_render<'a>(
    samples: u32,
    open: nsi::output::OpenCallback,
    write: nsi::output::WriteCallback,
    finish: nsi::output::FinishCallback,
) {
    let ctx = nsi::Context::new(None).expect("Could not create NSI rendering context.");

    ctx.set_attribute(
        ".global",
        &[
            nsi::integer!("renderatlowpriority", 1),
            nsi::string!("bucketorder", "spiral"),
            nsi::integer!("quality.shadingsamples", samples as _),
            nsi::integer!("maximumraydepth.reflection", 6),
        ],
    );

    let polyhedron = polyhedron(&ctx);

    nsi_material(&ctx, &polyhedron);

    ctx.connect(polyhedron.as_str(), "", ".root", "objects", None);

    nsi_camera(&ctx, &polyhedron, open, write, finish);

    nsi_environment(&ctx);

    // And now, render it!
    ctx.render_control(&[nsi::string!("action", "start")]);
    ctx.render_control(&[nsi::string!("action", "wait")]);
}

fn polyhedron(c: &nsi::Context) -> String {
    let name = "jgD-mesh";

    c.create(name, nsi::NodeType::Mesh, None);

    c.set_attribute(
        name,
        &[
            nsi::points!(
                "P",
                &[
                    7.1882153e-9,
                    0.3568221,
                    0.93417216,
                    1.2762749e-8,
                    0.3568221,
                    -0.93417216,
                    1.2762749e-8,
                    -0.3568221,
                    0.93417216,
                    7.1882153e-9,
                    -0.3568221,
                    -0.93417216,
                    0.93417216,
                    5.501185e-9,
                    0.3568221,
                    0.93417216,
                    -1.12224177e-8,
                    -0.3568221,
                    -0.93417216,
                    -1.12224177e-8,
                    0.3568221,
                    -0.93417216,
                    5.501185e-9,
                    -0.3568221,
                    0.3568221,
                    0.93417216,
                    -1.3642938e-8,
                    0.3568221,
                    -0.93417216,
                    -8.0684046e-9,
                    -0.3568221,
                    0.93417216,
                    -8.0684046e-9,
                    -0.3568221,
                    -0.93417216,
                    -1.3642938e-8,
                    0.57735025,
                    0.57735025,
                    0.57735025,
                    0.57735025,
                    0.57735025,
                    -0.57735025,
                    0.57735025,
                    -0.57735025,
                    0.57735025,
                    0.57735025,
                    -0.57735025,
                    -0.57735025,
                    -0.57735025,
                    0.57735025,
                    0.57735025,
                    -0.57735025,
                    0.57735025,
                    -0.57735025,
                    -0.57735025,
                    -0.57735025,
                    0.57735025,
                    -0.57735025,
                    -0.57735025,
                    -0.57735025,
                    0.49310114,
                    3.828825e-9,
                    0.7978544,
                    9.418029e-9,
                    0.79785437,
                    0.49310114,
                    -0.49310114,
                    -1.7911857e-8,
                    0.7978544,
                    -0.7978544,
                    0.49310114,
                    -1.0298218e-8,
                    -0.49310114,
                    3.828825e-9,
                    -0.79785437,
                    -0.7978544,
                    -0.49310114,
                    1.4787185e-8,
                    9.418029e-9,
                    -0.7978544,
                    -0.49310114,
                    0.79785437,
                    -0.49310114,
                    -1.0298218e-8,
                    -1.5667375e-8,
                    -0.7978544,
                    0.49310114,
                    -1.7339735e-8,
                    0.7978544,
                    -0.49310123,
                    0.7978544,
                    0.49310114,
                    1.6459545e-8,
                    0.49310123,
                    -1.6239498e-8,
                    -0.7978544,
                    0.82426936,
                    -0.17782667,
                    0.52676182,
                    0.7697859,
                    -0.43104828,
                    0.45841845,
                    0.26035937,
                    0.39322113,
                    0.8752773,
                    0.34851555,
                    0.5919592,
                    0.7187779,
                    0.39322113,
                    0.8752773,
                    0.26035937,
                    0.5919592,
                    0.7187779,
                    0.34851555,
                    -0.17782667,
                    0.52676182,
                    0.82426936,
                    -0.43104828,
                    0.45841845,
                    0.7697859,
                    -0.26035937,
                    -0.39322113,
                    0.8752773,
                    -0.34851555,
                    -0.5919592,
                    0.7187779,
                    -0.82426936,
                    0.17782667,
                    0.52676182,
                    -0.7697859,
                    0.43104828,
                    0.45841845,
                    -0.08253268,
                    0.10549152,
                    0.98518025,
                    0.082532703,
                    -0.10549152,
                    0.98518025,
                    -0.52676182,
                    0.82426936,
                    0.17782667,
                    -0.45841845,
                    0.7697859,
                    0.43104828,
                    -0.98518025,
                    0.08253268,
                    0.10549151,
                    -0.98518025,
                    -0.08253268,
                    -0.105491533,
                    -0.8752773,
                    0.26035937,
                    -0.39322113,
                    -0.7187779,
                    0.34851555,
                    -0.5919592,
                    -0.26035937,
                    0.39322113,
                    -0.8752773,
                    -0.34851555,
                    0.5919592,
                    -0.7187779,
                    -0.82426936,
                    -0.17782667,
                    -0.52676182,
                    -0.7697859,
                    -0.43104828,
                    -0.45841845,
                    -0.8752773,
                    -0.26035937,
                    0.39322113,
                    -0.7187779,
                    -0.34851555,
                    0.5919592,
                    -0.52676182,
                    -0.82426936,
                    -0.17782669,
                    -0.45841845,
                    -0.7697859,
                    -0.43104828,
                    -0.17782667,
                    -0.52676182,
                    -0.82426936,
                    -0.43104828,
                    -0.45841845,
                    -0.7697859,
                    0.39322113,
                    -0.8752773,
                    -0.26035937,
                    0.5919592,
                    -0.7187779,
                    -0.34851555,
                    0.98518025,
                    -0.08253268,
                    0.10549151,
                    0.98518025,
                    0.08253268,
                    -0.105491533,
                    0.8752773,
                    -0.26035937,
                    -0.39322113,
                    0.7187779,
                    -0.34851555,
                    -0.5919592,
                    0.52676182,
                    -0.82426936,
                    0.17782667,
                    0.45841845,
                    -0.7697859,
                    0.43104828,
                    -0.39322113,
                    -0.8752773,
                    0.26035934,
                    -0.5919592,
                    -0.7187779,
                    0.34851555,
                    0.17782669,
                    -0.52676182,
                    0.82426936,
                    0.43104828,
                    -0.45841845,
                    0.7697859,
                    0.105491533,
                    -0.98518025,
                    0.08253268,
                    -0.10549151,
                    -0.98518025,
                    -0.082532703,
                    0.105491533,
                    0.98518025,
                    -0.082532703,
                    -0.10549151,
                    0.98518025,
                    0.08253268,
                    -0.39322113,
                    0.8752773,
                    -0.2603594,
                    -0.5919592,
                    0.7187779,
                    -0.34851555,
                    0.17782669,
                    0.52676182,
                    -0.82426936,
                    0.43104828,
                    0.45841845,
                    -0.7697859,
                    0.8752773,
                    0.26035937,
                    0.39322113,
                    0.7187779,
                    0.34851555,
                    0.5919592,
                    0.52676182,
                    0.82426936,
                    -0.17782669,
                    0.45841845,
                    0.7697859,
                    -0.43104828,
                    0.082532703,
                    0.10549152,
                    -0.98518025,
                    -0.08253268,
                    -0.10549152,
                    -0.98518025,
                    0.2603594,
                    -0.39322113,
                    -0.8752773,
                    0.34851555,
                    -0.5919592,
                    -0.7187779,
                    0.82426936,
                    0.17782667,
                    -0.52676182,
                    0.7697859,
                    0.43104828,
                    -0.45841845,
                    0.49635232,
                    0.42751246,
                    0.72538864,
                    0.8181983,
                    0.09324544,
                    0.52647687,
                    0.64722664,
                    -0.3698836,
                    0.6321432,
                    0.21971424,
                    -0.32184606,
                    0.89636033,
                    0.12646879,
                    0.1709718,
                    0.9539892,
                    -0.3698836,
                    0.6321432,
                    0.64722664,
                    -0.32184606,
                    0.89636033,
                    0.21971421,
                    0.1709718,
                    0.9539892,
                    0.12646878,
                    0.42751246,
                    0.72538864,
                    0.49635232,
                    0.09324545,
                    0.52647687,
                    0.8181983,
                    -0.12646878,
                    -0.1709718,
                    0.9539892,
                    -0.49635232,
                    -0.42751246,
                    0.72538864,
                    -0.8181983,
                    -0.09324544,
                    0.52647687,
                    -0.64722664,
                    0.3698836,
                    0.6321432,
                    -0.21971421,
                    0.32184606,
                    0.89636033,
                    -0.72538864,
                    0.49635232,
                    -0.42751246,
                    -0.52647687,
                    0.8181983,
                    -0.09324545,
                    -0.6321432,
                    0.64722664,
                    0.3698836,
                    -0.89636033,
                    0.21971421,
                    0.32184606,
                    -0.9539892,
                    0.12646879,
                    -0.1709718,
                    -0.64722664,
                    -0.3698836,
                    -0.6321432,
                    -0.21971421,
                    -0.32184606,
                    -0.89636033,
                    -0.12646878,
                    0.1709718,
                    -0.9539892,
                    -0.49635232,
                    0.42751246,
                    -0.72538864,
                    -0.8181983,
                    0.09324544,
                    -0.52647687,
                    -0.9539892,
                    -0.12646879,
                    0.1709718,
                    -0.72538864,
                    -0.49635232,
                    0.42751246,
                    -0.52647687,
                    -0.8181983,
                    0.09324543,
                    -0.6321432,
                    -0.64722664,
                    -0.3698836,
                    -0.89636033,
                    -0.21971421,
                    -0.32184606,
                    0.42751246,
                    -0.72538864,
                    -0.49635232,
                    0.09324545,
                    -0.52647687,
                    -0.8181983,
                    -0.3698836,
                    -0.6321432,
                    -0.64722664,
                    -0.32184606,
                    -0.89636033,
                    -0.21971424,
                    0.1709718,
                    -0.9539892,
                    -0.12646879,
                    0.6321432,
                    -0.64722664,
                    0.3698836,
                    0.89636033,
                    -0.21971421,
                    0.32184606,
                    0.9539892,
                    -0.12646879,
                    -0.1709718,
                    0.72538864,
                    -0.49635232,
                    -0.42751246,
                    0.52647687,
                    -0.8181983,
                    -0.09324545,
                    -0.1709718,
                    -0.9539892,
                    0.12646878,
                    -0.42751246,
                    -0.72538864,
                    0.49635232,
                    -0.09324543,
                    -0.52647687,
                    0.8181983,
                    0.3698836,
                    -0.6321432,
                    0.64722664,
                    0.32184606,
                    -0.89636033,
                    0.21971421,
                    0.32184606,
                    0.89636033,
                    -0.21971424,
                    -0.1709718,
                    0.9539892,
                    -0.12646879,
                    -0.42751246,
                    0.72538864,
                    -0.49635232,
                    -0.09324543,
                    0.52647687,
                    -0.8181983,
                    0.3698836,
                    0.6321432,
                    -0.64722664,
                    0.89636033,
                    0.21971421,
                    -0.32184606,
                    0.9539892,
                    0.12646879,
                    0.1709718,
                    0.72538864,
                    0.49635232,
                    0.42751246,
                    0.52647687,
                    0.8181983,
                    0.09324543,
                    0.6321432,
                    0.64722664,
                    -0.3698836,
                    0.21971424,
                    0.32184606,
                    -0.89636033,
                    0.12646879,
                    -0.1709718,
                    -0.9539892,
                    0.49635232,
                    -0.42751246,
                    -0.72538864,
                    0.8181983,
                    -0.09324544,
                    -0.52647687,
                    0.64722664,
                    0.3698836,
                    -0.6321432,
                ]
            ),
            nsi::integers!(
                "P.indices",
                &[
                    0, 96, 44, 106, 1, 114, 86, 147, 2, 95, 72, 134, 3, 113, 60, 123, 3, 123, 88,
                    148, 4, 93, 82, 143, 5, 129, 65, 142, 5, 142, 90, 150, 6, 104, 56, 117, 7, 111,
                    49, 121, 8, 99, 76, 137, 8, 137, 84, 145, 9, 126, 74, 136, 10, 98, 46, 108, 10,
                    108, 78, 138, 11, 119, 70, 132, 12, 92, 35, 100, 12, 100, 37, 144, 13, 141, 81,
                    151, 14, 94, 33, 127, 14, 127, 69, 135, 15, 122, 63, 130, 15, 130, 67, 149, 16,
                    97, 39, 105, 16, 105, 43, 109, 17, 107, 51, 115, 17, 115, 53, 139, 18, 103, 41,
                    133, 19, 112, 55, 120, 19, 120, 59, 124, 20, 92, 83, 93, 20, 93, 32, 94, 20,
                    94, 73, 95, 20, 95, 45, 96, 21, 97, 47, 98, 21, 98, 77, 99, 21, 99, 36, 100,
                    21, 100, 35, 101, 22, 102, 40, 103, 22, 103, 57, 104, 22, 104, 42, 105, 22,
                    105, 39, 106, 23, 107, 79, 108, 23, 108, 46, 109, 23, 109, 43, 110, 23, 110,
                    48, 111, 24, 112, 61, 113, 24, 113, 87, 114, 24, 114, 52, 115, 24, 115, 51,
                    116, 25, 117, 56, 118, 25, 118, 71, 119, 25, 119, 58, 120, 25, 120, 55, 121,
                    26, 122, 89, 123, 26, 123, 60, 124, 26, 124, 59, 125, 26, 125, 75, 126, 27,
                    127, 33, 128, 27, 128, 64, 129, 27, 129, 66, 130, 27, 130, 63, 131, 28, 132,
                    70, 133, 28, 133, 41, 134, 28, 134, 72, 135, 28, 135, 69, 136, 29, 137, 76,
                    138, 29, 138, 78, 139, 29, 139, 53, 140, 29, 140, 80, 141, 30, 142, 65, 143,
                    30, 143, 82, 144, 30, 144, 37, 145, 30, 145, 84, 146, 31, 147, 86, 148, 31,
                    148, 88, 149, 31, 149, 67, 150, 31, 150, 90, 151, 4, 128, 32, 93, 32, 128, 33,
                    94, 20, 96, 34, 92, 0, 101, 34, 96, 34, 101, 35, 92, 8, 145, 36, 99, 36, 145,
                    37, 100, 21, 101, 38, 97, 0, 106, 38, 101, 38, 106, 39, 97, 2, 134, 40, 102,
                    40, 134, 41, 103, 6, 110, 42, 104, 42, 110, 43, 105, 44, 96, 45, 102, 22, 106,
                    44, 102, 2, 102, 45, 95, 46, 98, 47, 109, 16, 109, 47, 97, 6, 117, 48, 110, 48,
                    117, 49, 111, 25, 121, 49, 117, 23, 111, 50, 107, 7, 116, 50, 111, 50, 116, 51,
                    107, 1, 140, 52, 114, 52, 140, 53, 115, 24, 116, 54, 112, 7, 121, 54, 116, 54,
                    121, 55, 112, 56, 104, 57, 118, 18, 118, 57, 103, 11, 125, 58, 119, 58, 125,
                    59, 120, 60, 113, 61, 124, 19, 124, 61, 112, 26, 126, 62, 122, 9, 131, 62, 126,
                    62, 131, 63, 122, 4, 143, 64, 128, 64, 143, 65, 129, 5, 150, 66, 129, 66, 150,
                    67, 130, 27, 131, 68, 127, 9, 136, 68, 131, 68, 136, 69, 127, 70, 119, 71, 133,
                    18, 133, 71, 118, 72, 95, 73, 135, 14, 135, 73, 94, 74, 126, 75, 132, 28, 136,
                    74, 132, 11, 132, 75, 125, 76, 99, 77, 138, 10, 138, 77, 98, 78, 108, 79, 139,
                    17, 139, 79, 107, 1, 147, 80, 140, 80, 147, 81, 141, 31, 151, 81, 147, 82, 93,
                    83, 144, 12, 144, 83, 92, 84, 137, 85, 146, 29, 141, 85, 137, 13, 146, 85, 141,
                    86, 114, 87, 148, 3, 148, 87, 113, 88, 123, 89, 149, 15, 149, 89, 122, 90, 142,
                    91, 151, 30, 146, 91, 142, 13, 151, 91, 146,
                ]
            ),
            nsi::integers!(
                "nvertices",
                &[
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                    4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
                ]
            ),
            nsi::string!("subdivision.scheme", "catmull-clark"),
            nsi::integer!("clockwisewinding", 1),
            nsi::integers!(
                "subdivision.creasevertices",
                &[
                    0, 96, 44, 106, 1, 114, 86, 147, 2, 95, 72, 134, 3, 113, 60, 123, 3, 123, 88,
                    148, 4, 93, 82, 143, 5, 129, 65, 142, 5, 142, 90, 150, 6, 104, 56, 117, 7, 111,
                    49, 121, 8, 99, 76, 137, 8, 137, 84, 145, 9, 126, 74, 136, 10, 98, 46, 108, 10,
                    108, 78, 138, 11, 119, 70, 132, 12, 92, 35, 100, 12, 100, 37, 144, 13, 141, 81,
                    151, 14, 94, 33, 127, 14, 127, 69, 135, 15, 122, 63, 130, 15, 130, 67, 149, 16,
                    97, 39, 105, 16, 105, 43, 109, 17, 107, 51, 115, 17, 115, 53, 139, 18, 103, 41,
                    133, 19, 112, 55, 120, 19, 120, 59, 124, 20, 92, 83, 93, 20, 93, 32, 94, 20,
                    94, 73, 95, 20, 95, 45, 96, 21, 97, 47, 98, 21, 98, 77, 99, 21, 99, 36, 100,
                    21, 100, 35, 101, 22, 102, 40, 103, 22, 103, 57, 104, 22, 104, 42, 105, 22,
                    105, 39, 106, 23, 107, 79, 108, 23, 108, 46, 109, 23, 109, 43, 110, 23, 110,
                    48, 111, 24, 112, 61, 113, 24, 113, 87, 114, 24, 114, 52, 115, 24, 115, 51,
                    116, 25, 117, 56, 118, 25, 118, 71, 119, 25, 119, 58, 120, 25, 120, 55, 121,
                    26, 122, 89, 123, 26, 123, 60, 124, 26, 124, 59, 125, 26, 125, 75, 126, 27,
                    127, 33, 128, 27, 128, 64, 129, 27, 129, 66, 130, 27, 130, 63, 131, 28, 132,
                    70, 133, 28, 133, 41, 134, 28, 134, 72, 135, 28, 135, 69, 136, 29, 137, 76,
                    138, 29, 138, 78, 139, 29, 139, 53, 140, 29, 140, 80, 141, 30, 142, 65, 143,
                    30, 143, 82, 144, 30, 144, 37, 145, 30, 145, 84, 146, 31, 147, 86, 148, 31,
                    148, 88, 149, 31, 149, 67, 150, 31, 150, 90, 151, 4, 128, 32, 93, 32, 128, 33,
                    94, 20, 96, 34, 92, 0, 101, 34, 96, 34, 101, 35, 92, 8, 145, 36, 99, 36, 145,
                    37, 100, 21, 101, 38, 97, 0, 106, 38, 101, 38, 106, 39, 97, 2, 134, 40, 102,
                    40, 134, 41, 103, 6, 110, 42, 104, 42, 110, 43, 105, 44, 96, 45, 102, 22, 106,
                    44, 102, 2, 102, 45, 95, 46, 98, 47, 109, 16, 109, 47, 97, 6, 117, 48, 110, 48,
                    117, 49, 111, 25, 121, 49, 117, 23, 111, 50, 107, 7, 116, 50, 111, 50, 116, 51,
                    107, 1, 140, 52, 114, 52, 140, 53, 115, 24, 116, 54, 112, 7, 121, 54, 116, 54,
                    121, 55, 112, 56, 104, 57, 118, 18, 118, 57, 103, 11, 125, 58, 119, 58, 125,
                    59, 120, 60, 113, 61, 124, 19, 124, 61, 112, 26, 126, 62, 122, 9, 131, 62, 126,
                    62, 131, 63, 122, 4, 143, 64, 128, 64, 143, 65, 129, 5, 150, 66, 129, 66, 150,
                    67, 130, 27, 131, 68, 127, 9, 136, 68, 131, 68, 136, 69, 127, 70, 119, 71, 133,
                    18, 133, 71, 118, 72, 95, 73, 135, 14, 135, 73, 94, 74, 126, 75, 132, 28, 136,
                    74, 132, 11, 132, 75, 125, 76, 99, 77, 138, 10, 138, 77, 98, 78, 108, 79, 139,
                    17, 139, 79, 107, 1, 147, 80, 140, 80, 147, 81, 141, 31, 151, 81, 147, 82, 93,
                    83, 144, 12, 144, 83, 92, 84, 137, 85, 146, 29, 141, 85, 137, 13, 146, 85, 141,
                    86, 114, 87, 148, 3, 148, 87, 113, 88, 123, 89, 149, 15, 149, 89, 122, 90, 142,
                    91, 151, 30, 146, 91, 142, 13, 151, 91, 146,
                ]
            ),
            nsi::floats!(
                "subdivision.creasesharpness",
                &[
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                    10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,
                ]
            ),
            nsi::integer!("subdivision.smoothcreasecorners", 0),
        ],
    );

    name.to_string()
}
